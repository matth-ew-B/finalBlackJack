/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package casino;

import java.awt.Color;
import java.util.ArrayList;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.text.DecimalFormat;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;



/**
 *
 * @author Han
 */
public class BlackJack extends javax.swing.JFrame {

    static int betValue = 5;
    
    //determines if rules text box is shown
    boolean rules = false;

    //stores image file being outputted
    static ImageIcon imageIcon = new ImageIcon();

    //position of the card in terms of what label its image is on
    static int pos = 0;
    
    //array containing labels that card images are being outputted on
    //array allows counting up the labels
    static JLabel[] cardpos;

    /**
     * Creates new form BlackJack
     */
    public BlackJack() {

        initComponents();
       
        
        //starts/sets up the game at program start up
        restart();

        this.getContentPane().setBackground(new java.awt.Color(0, 100, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        hitButton = new javax.swing.JButton();
        hold = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bet = new javax.swing.JButton();
        jBet = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        TotMoney = new javax.swing.JLabel();
        handTot = new javax.swing.JLabel();
        dealerTot = new javax.swing.JLabel();
        dCard1 = new javax.swing.JLabel();
        dCard2 = new javax.swing.JLabel();
        dCard3 = new javax.swing.JLabel();
        dCard4 = new javax.swing.JLabel();
        dCard5 = new javax.swing.JLabel();
        dCard6 = new javax.swing.JLabel();
        dCard7 = new javax.swing.JLabel();
        dCard8 = new javax.swing.JLabel();
        card1 = new javax.swing.JLabel();
        card2 = new javax.swing.JLabel();
        card3 = new javax.swing.JLabel();
        card4 = new javax.swing.JLabel();
        card5 = new javax.swing.JLabel();
        card6 = new javax.swing.JLabel();
        card7 = new javax.swing.JLabel();
        card8 = new javax.swing.JLabel();
        totMone = new javax.swing.JLabel();
        card9 = new javax.swing.JLabel();
        card10 = new javax.swing.JLabel();
        card11 = new javax.swing.JLabel();
        card12 = new javax.swing.JLabel();
        card13 = new javax.swing.JLabel();
        dCard9 = new javax.swing.JLabel();
        dCard10 = new javax.swing.JLabel();
        dCard11 = new javax.swing.JLabel();
        dCard12 = new javax.swing.JLabel();
        dCard13 = new javax.swing.JLabel();
        lblDScore = new javax.swing.JLabel();
        lblPScore = new javax.swing.JLabel();
        lblOutcome = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRules = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 153, 51));
        setMaximumSize(new java.awt.Dimension(1376, 1053));
        setPreferredSize(new java.awt.Dimension(1500, 2000));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("BLACKJACK GAME");
        jLabel1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        hitButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hitButton.setText("Hit");
        hitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitButtonActionPerformed(evt);
            }
        });

        hold.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hold.setText("Hold");
        hold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holdActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Dealer's hand");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Your hand");

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setText("Rules ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 153, 0));
        jLabel4.setText("Score:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 0));
        jLabel5.setText("Score:");

        bet.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bet.setText("Bet");
        bet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                betActionPerformed(evt);
            }
        });

        jBet.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBet.setText("0");
        jBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBetActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setText("New Game");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Money:");

        TotMoney.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        TotMoney.setForeground(new java.awt.Color(255, 255, 255));
        TotMoney.setText("Total money: $");

        dCard1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        totMone.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        totMone.setForeground(new java.awt.Color(255, 255, 255));

        lblDScore.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblDScore.setForeground(new java.awt.Color(255, 255, 255));

        lblPScore.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblPScore.setForeground(new java.awt.Color(255, 255, 255));

        lblOutcome.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblOutcome.setForeground(new java.awt.Color(204, 204, 0));

        txtRules.setColumns(20);
        txtRules.setRows(5);
        txtRules.setText(" BLACKJACK RULES:  \n-Each user is dealt 2 cards. \n-The dealer is dealt 2 cards with one face-up \n and one face-down. \n-Cards are equal to their value with face cards \n being 10 and an Ace being 1 or 11 \n-The users cards are added up for their total \n-Users “Hit” to gain another card from the deck. \n-Users “Hold to keep their current card total\n-Dealer “Hits” until they equal or exceed 17\n-The goal is to have a higher card total than \n the dealer without going over 21\n-Users win their bet if the  total equals \n the dealer total\n-Users win their bet if they get “Blackjack” \n which is 21");
        txtRules.setMinimumSize(new java.awt.Dimension(300, 292));
        txtRules.setPreferredSize(new java.awt.Dimension(300, 292));
        jScrollPane1.setViewportView(txtRules);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1079, 1079, 1079)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPScore, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(309, 309, 309)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(249, 249, 249)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(248, 248, 248)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(107, 107, 107)
                                        .addComponent(dealerTot, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(528, 528, 528)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDScore, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TotMoney)
                                .addGap(18, 18, 18)
                                .addComponent(totMone, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(307, 307, 307)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(269, 269, 269)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(dCard2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(dCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dCard5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dCard6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dCard7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dCard8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(dCard9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(dCard10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(card6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(card7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(card8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(card9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(card10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(dCard1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(148, 148, 148)
                                        .addComponent(card11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(card13, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dCard11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dCard12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(52, 52, 52)
                                        .addComponent(dCard13, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(139, 139, 139))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1351, 1351, 1351)
                        .addComponent(card12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1236, 1236, 1236)
                        .addComponent(handTot, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(461, 461, 461)
                                .addComponent(hitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(hold, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(28, 28, 28)
                                .addComponent(jBet, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bet))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(card2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(card3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(card4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(card5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dealerTot, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblDScore, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dCard1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dCard9, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dCard11, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dCard7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dCard8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dCard2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dCard5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dCard6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(totMone, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TotMoney)
                                            .addComponent(jLabel3)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblPScore, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(138, 138, 138)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))))
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dCard10, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dCard12, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dCard13, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(104, 104, 104)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(card10, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card11, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card13, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card9, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(lblOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBet, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bet, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hold, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(card12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(handTot, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1AncestorAdded

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //toggles the rules
        //the rules variable is a boolean determining the status of the textbox
        jScrollPane1.setVisible(rules);
        rules = !rules;
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBetActionPerformed

    private void betActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_betActionPerformed
     //starts over the game

        if (Integer.parseInt(jBet.getText()) > 0 && Integer.parseInt(jBet.getText()) < findMoney()) {
            restart();
            //hides bet button and shows hit and hold
            setVis(false);
            getBet(Integer.parseInt(jBet.getText()));
        }
    }//GEN-LAST:event_betActionPerformed

    private void hitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitButtonActionPerformed
        //the array of the image positions
        cardpos = new JLabel[]{card3, card4, card5, card6, card7, card8, card9, card10, card11, card12, card13};
        
        System.out.print("player: ");
        
        handTotal = drawCard(handTotal);
        //sets the score output label to the score/handTotal
        lblPScore.setText("" + handTotal);
        
        //sets the image to its position and moves to the next position
        cardpos[pos].setIcon(imageIcon);
        pos++;

        System.out.println(" Total: " + handTotal);
        if (handTotal == 21) {
            endTurn();
        } else if (handTotal > 21) {
            System.out.println("BUST");
            loseBet(findMoney(), betValue);
            
            lblOutcome.setText("YOU BUSTED");
            //shows bet button and hides hit and hold button
            setVis(true);
        }


    }//GEN-LAST:event_hitButtonActionPerformed

    private void holdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holdActionPerformed
        endTurn();
    }//GEN-LAST:event_holdActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        restart();
        changeMoney(500);
    }//GEN-LAST:event_jButton6ActionPerformed

    public static DecimalFormat df = new DecimalFormat("$#,###.00");
    public static player user = new player();

    public static int findMoney() {
        int currentMoney = 0;
        try {
            FileReader fr = new FileReader("src//casino//userMoney.txt");
            BufferedReader br = new BufferedReader(fr);
            currentMoney = Integer.parseInt(br.readLine());
        } catch (IOException e) {
            System.out.println("Error: " + e);
        }
        return currentMoney;
    }

    public static void changeMoney(int newMone) {
        try {
            FileWriter myWriter = new FileWriter("src//casino//userMoney.txt");
            BufferedWriter bw = new BufferedWriter(myWriter);
            bw.write(newMone + "");
            bw.close();
        } catch (IOException e) {
            System.out.println("Error: " + e);
        }
    }

    //Determines if an ace has been drawn with a value of 11
    //In order to change the value to a 1
    static boolean ace;

    //Points that determine whether the player wins or loses with their hand
    static int handTotal = 0;

    //Points that determine whether the player wins or loses with their hand
    static int botTotal = 0;

    //Array that holds all the cards
    //Represents the deck
    static ArrayList<cards> deck = new ArrayList();

    /**
     * Creates a new deck by calling upon the constructor class for cards And
     * then putting them into an array
     */
    public static void newDeck() {
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 13; j++) {
                deck.add(new cards(i, j + 1));
            }
        }

    }

    /**
     * Draws a random card from the deck and adds points based on the value of
     * the card
     *
     * @param points the total points for the player's/bots hand that will be
     * modified in the method
     * @return
     */
    public static int drawCard(int points) {
        //System.out.println(points);
        //If the deck is empty, it resets it by calling upon the newDeck method
        if (deck.isEmpty()) {
            newDeck();
        }
        getBet(0);
        //removes and stores the card from a random index of the array
        int rand = (int) (Math.random() * (deck.size()));
        cards draw = deck.get(rand);
        //gets image file name from the cards object class and gets the image file from it
        imageIcon = new ImageIcon(new ImageIcon(deck.get(rand).img + ".png").getImage().getScaledInstance(120, 189, Image.SCALE_DEFAULT));
        System.out.print(deck.get(rand).name);
        deck.remove(rand);

        //Assigns the value of the card
        if (draw.num > 1 && draw.num < 11) {
            points += draw.num;
        } else if (draw.num >= 11) {
            points += 10;
        } else {
            if (points > 10) {
                points += 1;
            } else {
                points += 11;
                ace = true;
            }
        }
        //Changes a drawn ace from a value of 11 to 1 if the player or dealer busts 
        if (ace == true && points > 21) {
            points -= 10;
            ace = false;
        }
        return (points);
    }

    //After player has finished their turn
        public static void endTurn() {
        //resets position from player turn and creates a new array of positions for the dealer
        pos = 0;
        cardpos = new JLabel[]{dCard2, dCard3, dCard4, dCard5, dCard6, dCard7, dCard8, dCard9, dCard10, dCard11, dCard12, dCard13};

        //the bot/dealers turn
        while (botTotal < 17) {
            botTotal = drawCard(botTotal);
            //displays total score for dealer
            lblDScore.setText("" + botTotal);

            //sets the image to its position and moves to the next position
            cardpos[pos].setIcon(imageIcon);
            pos++;

            System.out.println("");
        }

        //determines outcome of the game
        System.out.println("DEALER:" + botTotal);
        System.out.println("PLAYER: " + handTotal);
        if (handTotal > 21 || (botTotal > handTotal && botTotal <= 21)) {
            System.out.println("LOSE");
            lblOutcome.setText("DEALER WINS");
            loseBet(findMoney(), betValue);
        } else if (botTotal > 21 || (handTotal > botTotal && handTotal <= 21)) {
            System.out.println("WIN");
            lblOutcome.setText("YOU WIN");
            addBet(findMoney(), betValue);
        } else {
            System.out.println("TIE");
            lblOutcome.setText("TIE");
        }
        setVis(true);
    }
    public static void getBet(int bet) {

        {
            if (user.getBank() > 0) {
                do {
                    betValue += bet;
                } while (!(betValue > 0 && betValue <= user.getBank()));

            }

        }

    }
    
    /**
     * resets all values that are specific to each round
     * 'creates' a new round
     */

    public static void restart() {
        System.out.println("");
        System.out.println("");
        handTotal = 0;
        botTotal = 0;
        betValue = 5;
        pos = 0;
        totMone.setText(findMoney() + "");
        //takes off all card images from the board
        cardpos = new JLabel[]{card3, card4, card5, card6, card7, card8, card9, card10, card11, card12, card13, dCard2, dCard3, dCard4, dCard5, dCard6, dCard7, dCard8, dCard9, dCard10, dCard11, dCard12, dCard13};
        for (int i = 0; i < cardpos.length; i++) {
            cardpos[i].setIcon(null);
        }

        //draws and displays the cards at the start of the turn
        handTotal = drawCard(handTotal);
        System.out.println(handTotal);
        card1.setIcon(imageIcon);

        handTotal = drawCard(handTotal);
        System.out.println(handTotal);
        card2.setIcon(imageIcon);

        imageIcon = new ImageIcon(new ImageIcon("red_back.png").getImage().getScaledInstance(120, 189, Image.SCALE_DEFAULT));
        dCard10.setIcon(imageIcon);

        botTotal = drawCard(botTotal);
        dCard1.setIcon(imageIcon);

        //hides the hit and hold button and shows the bet button
        setVis(true);

        lblPScore.setText("" + handTotal);
        lblDScore.setText("" + botTotal);

        lblOutcome.setText("");

    }
    
    /**
     * Decides the status of the hit, hold, and bet buttons
     * @param gameStarted if the game is starting, hides the bet button and shows the other buttons
     */
    public static void setVis(boolean gameStarted) {
        hold.setVisible(!gameStarted);
        hitButton.setVisible(!gameStarted);
        bet.setVisible(gameStarted);
    }


// This code will add or remove the player bets
    public static void addBet(int currentMoney, int betValue) {
        changeMoney(currentMoney + betValue);
        System.out.println(user.bank);

    }

    public static void loseBet(int currentMoney, int betValue) {
        changeMoney(currentMoney - betValue);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlackJack().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TotMoney;
    private static javax.swing.JButton bet;
    private static javax.swing.JLabel card1;
    private static javax.swing.JLabel card10;
    private static javax.swing.JLabel card11;
    private static javax.swing.JLabel card12;
    private static javax.swing.JLabel card13;
    private static javax.swing.JLabel card2;
    private static javax.swing.JLabel card3;
    private static javax.swing.JLabel card4;
    private static javax.swing.JLabel card5;
    private static javax.swing.JLabel card6;
    private static javax.swing.JLabel card7;
    private static javax.swing.JLabel card8;
    private static javax.swing.JLabel card9;
    private static javax.swing.JLabel dCard1;
    private static javax.swing.JLabel dCard10;
    private static javax.swing.JLabel dCard11;
    private static javax.swing.JLabel dCard12;
    private static javax.swing.JLabel dCard13;
    private static javax.swing.JLabel dCard2;
    private static javax.swing.JLabel dCard3;
    private static javax.swing.JLabel dCard4;
    private static javax.swing.JLabel dCard5;
    private static javax.swing.JLabel dCard6;
    private static javax.swing.JLabel dCard7;
    private static javax.swing.JLabel dCard8;
    private static javax.swing.JLabel dCard9;
    private javax.swing.JLabel dealerTot;
    private static javax.swing.JLabel handTot;
    private static javax.swing.JButton hitButton;
    private static javax.swing.JButton hold;
    private javax.swing.JTextField jBet;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JLabel lblDScore;
    private static javax.swing.JLabel lblOutcome;
    private static javax.swing.JLabel lblPScore;
    private static javax.swing.JLabel totMone;
    private javax.swing.JTextArea txtRules;
    // End of variables declaration//GEN-END:variables
}
